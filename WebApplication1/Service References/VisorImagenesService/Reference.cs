//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.VisorImagenesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VisorImagenesService.IVisorImagenes")]
    public interface IVisorImagenes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisorImagenes/GetFacturaImagenById", ReplyAction="http://tempuri.org/IVisorImagenes/GetFacturaImagenByIdResponse")]
        string[] GetFacturaImagenById(out string[] rutas, string GrupoCodigo, string FacturaCodigo, Alfanet.CommonObject.ConfigData config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisorImagenes/GetRutaImagenById", ReplyAction="http://tempuri.org/IVisorImagenes/GetRutaImagenByIdResponse")]
        string[] GetRutaImagenById(out string[] rutas, string ImagenRutaCodigo, Alfanet.CommonObject.ConfigData config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisorImagenes/SelectRutaCodigoFacturas", ReplyAction="http://tempuri.org/IVisorImagenes/SelectRutaCodigoFacturasResponse")]
        int SelectRutaCodigoFacturas(string path, Alfanet.CommonObject.ConfigData config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisorImagenes/InsertRutaImagen", ReplyAction="http://tempuri.org/IVisorImagenes/InsertRutaImagenResponse")]
        bool InsertRutaImagen(out int RutaCodigo, int ImagenRutaCodigo, string ImagenRutaDescripcion, int ImagenRutaAnio, int ImagenRutaMes, int ImagenRutaGrupo, string ImagenRutaPath, Alfanet.CommonObject.ConfigData config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisorImagenes/InsertFacturaImagen", ReplyAction="http://tempuri.org/IVisorImagenes/InsertFacturaImagenResponse")]
        bool InsertFacturaImagen(int radicadoCodigo, string GrupoCodigo, string imagenNombre, int ImagenRutaCodigo, Alfanet.CommonObject.ConfigData config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisorImagenes/EliminarImagen", ReplyAction="http://tempuri.org/IVisorImagenes/EliminarImagenResponse")]
        bool EliminarImagen(int FacturaCodigo, int FacturaImagenFolio, Alfanet.CommonObject.ConfigData config);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVisorImagenesChannel : WebApplication1.VisorImagenesService.IVisorImagenes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VisorImagenesClient : System.ServiceModel.ClientBase<WebApplication1.VisorImagenesService.IVisorImagenes>, WebApplication1.VisorImagenesService.IVisorImagenes {
        
        public VisorImagenesClient() {
        }
        
        public VisorImagenesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VisorImagenesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisorImagenesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisorImagenesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetFacturaImagenById(out string[] rutas, string GrupoCodigo, string FacturaCodigo, Alfanet.CommonObject.ConfigData config) {
            return base.Channel.GetFacturaImagenById(out rutas, GrupoCodigo, FacturaCodigo, config);
        }
        
        public string[] GetRutaImagenById(out string[] rutas, string ImagenRutaCodigo, Alfanet.CommonObject.ConfigData config) {
            return base.Channel.GetRutaImagenById(out rutas, ImagenRutaCodigo, config);
        }
        
        public int SelectRutaCodigoFacturas(string path, Alfanet.CommonObject.ConfigData config) {
            return base.Channel.SelectRutaCodigoFacturas(path, config);
        }
        
        public bool InsertRutaImagen(out int RutaCodigo, int ImagenRutaCodigo, string ImagenRutaDescripcion, int ImagenRutaAnio, int ImagenRutaMes, int ImagenRutaGrupo, string ImagenRutaPath, Alfanet.CommonObject.ConfigData config) {
            return base.Channel.InsertRutaImagen(out RutaCodigo, ImagenRutaCodigo, ImagenRutaDescripcion, ImagenRutaAnio, ImagenRutaMes, ImagenRutaGrupo, ImagenRutaPath, config);
        }
        
        public bool InsertFacturaImagen(int radicadoCodigo, string GrupoCodigo, string imagenNombre, int ImagenRutaCodigo, Alfanet.CommonObject.ConfigData config) {
            return base.Channel.InsertFacturaImagen(radicadoCodigo, GrupoCodigo, imagenNombre, ImagenRutaCodigo, config);
        }
        
        public bool EliminarImagen(int FacturaCodigo, int FacturaImagenFolio, Alfanet.CommonObject.ConfigData config) {
            return base.Channel.EliminarImagen(FacturaCodigo, FacturaImagenFolio, config);
        }
    }
}
